(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{273:function(t,o,r){"use strict";r.r(o);var i=r(2),n=Object(i.a)({},(function(){var t=this,o=t.$createElement,r=t._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"springboot笔记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot笔记"}},[t._v("#")]),t._v(" SpringBoot笔记")]),t._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"/07_springboot/01_HelloWorld.html"}},[t._v("国际惯例先来一个 Hello World")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/02_Test.html"}},[t._v("SpringBoot中的单元测试")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/02_Web.html"}},[t._v("SpringBoot开发Web应用")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/03_Jsp.html"}},[t._v("SpringBoot中使用Jsp")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/04_Upload.html"}},[t._v("SpringBoot和Freemarker文件上传")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/05_FastDFS.html"}},[t._v("使用SpringBoot上传文件到FastDFS")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/06_RESTful.html"}},[t._v("SpringBoot构建RESTful Web服务")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/07_Swagger.html"}},[t._v("使用Swagger 2 构建API文档")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/08_WebSocket.html"}},[t._v("SpringBoot WebSocket创建聊天室")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/09_Jdbc.html"}},[t._v("SpringBoot使用JDBC操作数据库")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/10_MybatisXML.html"}},[t._v("SpringBoot集成Mybatis XML 配置版")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/11_MybatisAnnotation.html"}},[t._v("SpringBoot集成Mybatis 注解版")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/12_SpringDataJPA.html"}},[t._v("Spring Data JPA的使用")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/13_Druid.html"}},[t._v("Spring Boot 集成 Druid 监控数据源")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/14_Memcache.html"}},[t._v("Spring Boot 集成 Memcache")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/15_Redis.html"}},[t._v("Spring Boot 集成 Redis")])],1),t._v(" "),r("li",[r("router-link",{attrs:{to:"/07_springboot/16_RedisSession.html"}},[t._v("Redis 实现Session共享")])],1)]),t._v(" "),r("hr"),t._v(" "),r("p",[r("br"),r("br"),r("br"),r("br"),r("br"),r("br")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("Spring、Spring Boot 和 Spring Cloud 的关系")]),t._v(" "),r("p",[t._v("  Spring 最初核心的两大核心功能 Spring IoC 和 Spring Aop 成就了 Spring，Spring 在这两大核心功能上不断地发展，才有了 Spring 事务、Spring MVC 等一系列伟大的产品，最终成就了 Spring 帝国，到了后期 Spring 几乎可以解决企业开发中的所有问题。")]),t._v(" "),r("p",[t._v("  Spring Boot 是在强大的 Spring 帝国生态基础上面发展而来，发明 Spring Boot 不是为了取代 Spring，是为了让人们更容易的使用 Spring。所以说没有 Spring 强大的功能和生态，就不会有后期 Spring Boot 的火热，Spring Boot 使用约定优于配置的理念，重新重构了 Spring 的使用，让 Spring 后续的发展更有生命力。")]),t._v(" "),r("p",[t._v("  Spring 并没有重复制造轮子，它只是将目前各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过 Spring Boot 风格进行再封装并屏蔽掉复杂的配置和实现原理，最终给开发者提供了一套简单易懂、易部署、易维护的分布式系统开发工具包。")]),t._v(" "),r("p",[t._v("  Spring Cloud 是一系列框架的有序集合，它利用 Spring Boot 的开发便利性巧妙地简化了分布式系统基础设施的开发。服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用 Spring Boot 的开发风格做到一键启动和部署。")]),t._v(" "),r("p",[t._v("  Spring Cloud 是为了解决微服务架构中服务治理而提供的具备一系列功能的开发框架，并且 Spring Cloud 是完全基于 Spring Boot 而开发，Spring Cloud 利用 Spring Boot 特性整合了开源行业中优秀的组件，整体对外提供了一套在微服务架构中服务治理的解决方案。")]),t._v(" "),r("p",[t._v("  综上我们可以这样来理解，正是由于 Spring IoC 和 Spring Aop 两个强大的功能才有了 Spring，Spring 生态不断的发展才有了 Spring Boot，使用 Spring Boot 让 Spring 更易用更有生命力，Spring Cloud 是基于 Spring Boot 开发的一套微服务架构下的服务治理方案。")])])])}),[],!1,null,null,null);o.default=n.exports}}]);